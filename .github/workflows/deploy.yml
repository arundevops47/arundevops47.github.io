name: Deploy VitePress site to Pages and Server

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  # Build modern version for GitHub Pages
  build-modern:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - name: Install Dependencies
        run: npm ci
      - name: Build Modern Version
        run: |
          npm run build:modern
          touch src/modern/.vitepress/dist/.nojekyll
      - name: Debug Build Output
        run: |
          echo "Checking dist folder for modern build"
          ls -R src/modern/.vitepress/dist || echo "Modern build output directory not found"
      - name: Upload Modern Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: src/modern/.vitepress/dist

  # Deploy modern version to GitHub Pages
  deploy-modern:
    environment:
      name: github-pages
      url: https://support.mantishub.com
    needs: build-modern
    runs-on: ubuntu-latest
    steps:
      - name: Deploy Modern to GitHub Pages
        id: deployment-modern
        uses: actions/deploy-pages@v4
        with:
          path: src/modern/.vitepress/dist

  deploy-to-server:
    needs: build-modern
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Dependencies
        run: npm ci

      - name: Debug src/modern Directory
        run: |
          echo "Checking src/modern directory"
          ls -R src/modern || echo "src/modern directory not found"

      - name: Build Modern Version
        run: npm run build:modern

      - name: Debug Build Output for Modern
        run: |
          echo "Checking dist folder for modern build"
          ls -R src/modern/.vitepress/dist || echo "Modern build output directory not found"

      - name: Build Classic Version
        run: npm run build:classic

      - name: Debug Build Output for Classic
        run: |
          echo "Checking dist folder for classic build"
          ls -R src/classic/.vitepress/dist || echo "Classic build output directory not found"

      - name: Set up SSH Key and Agent
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SERVER_DEPLOY_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          eval $(ssh-agent -s)
          ssh-add ~/.ssh/id_rsa

      - name: Add Server to known_hosts Dynamically
        run: |
          ssh-keyscan -H ${{ vars.SERVER_IP }} >> ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts

      - name: Deploy Files and Configure Server
        run: |
          ssh forge@${{ vars.SERVER_IP }} << 'EOF'
          # Deploy files
          mkdir -p /var/www/modern /var/www/classic

          # Deploy Modern Version
          if [ -d "src/modern/.vitepress/dist" ]; then
            echo "Deploying Modern Version..."
            scp -v -r src/modern/.vitepress/dist/* forge@${{ vars.SERVER_IP }}:/var/www/modern
          else
            echo "Modern build output directory missing. Skipping deployment."
            exit 1
          fi

          # Deploy Classic Version
          if [ -d "src/classic/.vitepress/dist" ]; then
            echo "Deploying Classic Version..."
            scp -v -r src/classic/.vitepress/dist/* forge@${{ vars.SERVER_IP }}:/var/www/classic
          else
            echo "Classic build output directory missing. Skipping deployment."
            exit 1
          fi

          # Configure Nginx for Modern
          sudo bash -c 'cat > /etc/nginx/sites-available/modern.mantishub.com << CONFIG
          server {
              server_name modern.mantishub.com;
              root /var/www/modern;

              index index.html;

              location / {
                  try_files \$uri \$uri/ =404;
              }

              listen 80;
          }
          CONFIG'
          sudo ln -sf /etc/nginx/sites-available/modern.mantishub.com /etc/nginx/sites-enabled/

          # Configure Nginx for Classic
          sudo bash -c 'cat > /etc/nginx/sites-available/classic.mantishub.com << CONFIG
          server {
              server_name classic.mantishub.com;
              root /var/www/classic;

              index index.html;

              location / {
                  try_files \$uri \$uri/ =404;
              }

              listen 80;
          }
          CONFIG'
          sudo ln -sf /etc/nginx/sites-available/classic.mantishub.com /etc/nginx/sites-enabled/

          # Reload Nginx
          sudo nginx -t
          sudo systemctl reload nginx

          # Install SSL Certificates
          sudo apt-get install -y certbot python3-certbot-nginx
          sudo certbot --nginx -d modern.mantishub.com --non-interactive --agree-tos -m arundevops47@gmail.com
          sudo certbot --nginx -d classic.mantishub.com --non-interactive --agree-tos -m arundevops47@gmail.com

          # Verify SSL Renewal
          sudo certbot renew --dry-run
          EOF